include shared-gdrive("dcic-2021", "1wyQZj_L0qqV9Ekgr9au6RX2iqt2Ga8Ep")
include gdrive-sheets
include data-source
ssid = 
  "1RYN0i4Zx_UETVuYacgaGfnFcv4l9zd9toQTTdkQkj7g"
event-data = 
  load-table: ID, Fornavn, Etternavn, Epost, Kjonn, IP, Alder
    source: load-spreadsheet(ssid).sheet-by-name("o1-oppg3", true)
  end

# Oppgave 3A


# Filtrer Alder :: Number :: Number -> Tabell
# Input skriver yngst man vil ha og eldst man vil ha
# Output Printer ut tabell for folk I alder man vil ha

fun filtrer-alder(table):
  doc: "Denne funksjonen tar opp folk som er mellom 30 og 80 år gammel"
  filter-with(table, lam(row): (row["Alder"] <= 80) and (row["Alder"] >= 30) end) # Hoveddel av funksjon, filteren.
end

filtrer-alder(event-data) # Input er hvilken tabell man velger og den gir da tabellen som returverdi



# Oppgave 3B


# Navn-og-mail :: String -> Tabell
# Input valg av om man vil ha eldst eller yngst
# Output Tabell av eldst eller yngst person

fun navn-og-mail(status):
  doc: "Denne gir da den eldste eller yngste som returverdi"
  tabell = block:
    if status == "gammel": # Hvis man velger "gammel" så får man den eldste personen som returverdi
      sortertabell = order event-data:
        Alder descending
    end
      sortertabell.row-n(1)
    else if status == "ung": # Hvis man velger "ung" så får man den yngste personen som returverdi
      sortertabell = order event-data:
        Alder ascending
    end
    sortertabell.row-n(1)
  end
end
  tabell
end
navn-og-mail("ung") # Input er hvilken tabell man velger og den gir da tabellen som returverdi



# Oppgave 3C


# Gjennomsnittsalder :: string -> Number
# Input skriver om at vi vil ha gjennomsnitt på Alder
# Output Gjennomsnittsalder


fun gjennomsnittsalder(tabell): 
  doc: "Denne tabellen gir gjennomsnittsalderen på tabellen"
  mean(tabell, "Alder") # Mean gir da gjennomsnittet 
  where:
  gjennomsnittsalder(event-data) is 55.9  # Test blokk
end
gjennomsnittsalder(event-data) #Input for tabell og print



# Oppgave 3D

# Lager en ny kolonne som gir da full navn 
Ny_column = build-column(event-data, "Fulltnavn", lam(r): r["Fornavn"] + " " + r["Etternavn"] end) # 


# Bar-chart :: String :: String -> Bar-chart 
# Input er X-aksen og Y-Aksen og hva man vil ha
# Output er Bar-chart

fun bar_chart_people(table):
  doc: "Denne funksjonen lager bar.chart"
  bar-chart(
    table,
    "Fulltnavn",     # X-axen
    "Alder"          # Y-axen          
  )
end
 
bar_chart_people(Ny_column) #Input for tabell og returverdi